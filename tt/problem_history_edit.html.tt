[%- js.jquery = 1; js.ace = 1 -%]
[% extra_head = BLOCK %]
<style>
  @import 'css/git.css';
</style>
<script>
window.addEventListener('load', function () {
  if (!ace) return;
  Editor.set_syntax('ed_pe[% pid %]_[% file %]', 'de_id');
  var editor = Editor.get_editor($('.page_body'));
  if (!editor) return;

  var langTools = ace.require('ace/ext/language_tools');
  var complete_lists = [% autocomplete %];

  var is_dot = function(s) { return './'.indexOf(s) >= 0; };

  var acceptable_prefix_attr = function(attr) { return function(session, pos, prefix) {
    if (prefix != "") return true;
    if (pos.column == 0) return false;
    var line = session.getLine(pos.row);
    if (line[pos.column - 1] == '"') {
        var suffix = ' ' + attr + '="';
        var actual_suffix = line.substr(pos.column - suffix.length, suffix.length);
        return suffix.length < pos.column && actual_suffix == suffix;
    }
    return is_dot(line[pos.column - 1]);
  };};
  var acceptable_prefix_tag = function(session, pos, prefix) {
    if (prefix != "") return true;
    if (pos.column == 0) return false;
    return session.getLine(pos.row)[pos.column - 1] == '<';
  };
  var re_ident = /[a-zA-Z_\-]/;
  var prefilter_dotted = function(data, session, pos) {
    if (pos.column == 0) return data;
    var line = session.getLine(pos.row);
    for (var i = pos.column; i > 0 && re_ident.test(line[i - 1]); --i);
    for (var j = i; j > 0 && re_ident.test(line[j - 1]) || is_dot(line[j - 1]); --j);
    var prefix = line.substring(j, i);
    var result = [];
    for (var i = 0; i < data.length; ++i) {
      if (data[i].startsWith(prefix)) result.push(data[i].substr(prefix.length));
    }
    return result;
  };
  var prefilter_none = function(data) { return data; };
  var completer = function(data, meta, is_acceptable_prefix, prefilter) {
    return {
      getCompletions: function(editor, session, pos, prefix, callback) {
        if (!is_acceptable_prefix(session, pos, prefix)) {
          callback(null, []);
          return;
        }
        callback(null, $.map(
          prefilter(data, session, pos),
          function (c) { return { value: c, score: 1, meta: meta }; }
        ));
      }
    }
  };
  langTools.setCompleters([
    completer(complete_lists.cats_tags, 'cats', acceptable_prefix_tag, prefilter_none),
    completer(complete_lists.keywords, 'keyword', acceptable_prefix_attr('code'), prefilter_dotted),
    completer(complete_lists.guids, 'guid', acceptable_prefix_attr('guid'), prefilter_dotted),
    completer(complete_lists.files, 'file', acceptable_prefix_attr('src'), prefilter_dotted)
  ]);

  var preproces_file_link = function(filename) {
    var p = filename.match(/\.(jpe?g|png|bmp|gif)$/) ? '[% href_blob_prefix %]' : '[% href_edit_prefix %]';
    var p_new = complete_lists.files.indexOf(filename) >= 0 ? '' : ';new=1';
    return p + p_new + ';file=' + filename;
  };

  if ($('option:selected', $('#de_id')).attr('editor-syntax') === 'xml') {
    Editor.highlight_errors('log', [ /at\sline\s(\d+)/ ], 'ed_pe[% pid %]_[% file %]');
    editor.hoverLink.registerLink(/src="([a-zA-Z0-9_\-\.\/]+)"/, preproces_file_link);
  }

  var add_button_function = function(is_repeat, tag, prefix, suffix, prev, next) {
    return function() {
      editor.focus();
      var search = function() { return editor.$search.findAll(editor.session); };
      if (!is_repeat) {
        editor.$search.setOptions({ needle: tag });
        var matches = search();
        if (matches.length)
          var match = matches[matches.length - 1].start;
          var insert_position = { row: match.row, column: match.column };
          editor.selection.moveTo(insert_position.row, prefix.length);
          // 0.5 centers the line on screen
          editor.renderer.scrollCursorIntoView(insert_position, 0.5);
          return;
      }
      editor.$search.setOptions({ needle: prev });
      matches = search();
      var offset = 1;
      if (!matches.length) {
        editor.$search.setOptions({ needle: next });
        matches = search();
        offset = 0;
      }
      if (!matches) return;
      var match = matches[matches.length - 1].start;
      var insert_position = { row: match.row + offset, column: match.column };
      editor.session.insert(insert_position, prefix + suffix);
      editor.selection.moveTo(insert_position.row, prefix.length);
      // 0.5 centers the line on screen
      editor.renderer.scrollCursorIntoView(insert_position, 0.5);
    }
  }

  $('#keyword_button').click(add_button_function(true,
    /<Keyword code=/, '<Keyword code="', '" />\n', /<Keyword code=/, /<ProblemStatement>/));
  $('#input_button').click(add_button_function(false,
    /<InputFormat>/, '<InputFormat>', '</InputFormat>\n', /ProblemStatement>/, /<OutputFormat>/));
  $('#output_button').click(add_button_function(false,
    /<OutputFormat>/, '<OutputFormat>', '</OutputFormat>\n', /InputFormat>/, /<ProblemConstraints>/));
  $('.problem_menu_trigger').click(function() { $(this).toggleClass('problem_menu_hovered'); });
})</script>
[%- END %]
[% PROCESS includes/menu_begin.tti %]
[%- PROCESS "lang/$lang/problems.html.tt" -%]
[%- PROCESS includes/html.tti -%]

[% IF problem_import_log %]
[% capt.problem_import_log %]:<br/>
<textarea id="log" cols="100" rows="10" readonly="readonly">
  [%- problem_import_log | html %]
</textarea>
[% END %]

<form id="edit_file_form" method="post" accept-charset="UTF-8" enctype="multipart/form-data" style="margin: 0">
<div class="commit_header">
[%- IF !edit_file; capt.file_creating; ELSE; capt.file_editing; END -%]
<input name="new_name" style="margin-left: 5px;" type="text" size="25" value="[% file %]">
</div>
[% IF edit_file %]
<div class="page_path">
  [% FOREACH path IN blob.paths %]
    <a href="[% path.href %]">[% path.file_name %]</a>
  [% ' / ' UNLESS loop.last; END %]
  @ [% last_commit.subject | html %] ([% last_commit.author | html %], [% last_commit.sha %])
</div>
[% END %]
<div class="page_body">
  <select name="src_enc">
    [%- FOREACH se IN source_encodings %]
    <option value="[% se.enc %]"[% ' selected="selected"' IF se.selected %]>[% se.enc %]</option>
    [%- END %]
  </select>
  <button type="submit" value="1" class="button">[% capt.enc %]</button>
  <br/><br/>
  <div class="toolbar_container">
    <select id="de_id" class="toolbar_item">
      [% FOREACH de IN de_list.des; editor_select_option(de.id, de.description, de.syntax, de.id == de_selected.id); END %]
    </select>
    <a class="problem_menu_trigger toolbar_item">[% capt.add %]
      <div class="editor_menu">
        <button type="button" id="keyword_button" class="button toolbar_item">[% capt.keyword %]</button>
        <button type="button" id="input_button" class="button toolbar_item">[% capt.input_format %]</button>
        <button type="button" id="output_button" class="button toolbar_item">[% capt.output_format %]</button>
      </div>
    </a>
    <a class="problem_menu_trigger toolbar_item">&#x2261
      [%- PROCESS includes/editor_menu.tti editor_id = 'ed_pe' _ pid _ '_' _ (edit_file ? file : hash) -%]
    </a>
  </div>
    <div>
<textarea rows="40" cols="100" name="src" data-editor="[% de_selected.syntax || 'text' %]" data-gutter="1" data-id="ed_pe[% pid %]_[% IF edit_file; file; ELSE; hash; END; %]">
[%- IF blob.content; blob.content | html; ELSE; FOREACH line IN blob.lines %]
[% line.text | html %]
[%- END; END ~%]
</textarea>
    </div>
    <div class="problem_submit">
      <input type="hidden" name="src_enc" value="[% src_enc %]" />
      <p><label>
        <input type="checkbox" id="is_amend" name="is_amend" value="1"
          [%- ' checked="checked"' IF is_amend %] onclick="javascript:toggle_amend()"/> [% capt.amend %]
        </label></p>
      <p>
        <label for="message">[% capt.message %]:</label><br/>
        <textarea id="message" name="message" cols="50" rows="5">[% IF message; message; END %]</textarea>
      </p>
      <p>
        <button type="submit" name="save" value="1" class="button">[% capt.save %]</button>
        <input name="source" type="file" class="file" size="25" />
        <button type="submit" name="upload" value="1" class="button">[% capt.upload %]</button>
      </p>
    </div>
  </form>
  <div id="different_versions_msg" class="hidden">[% capt.different_versions %]</div>
</div>
[% PROCESS includes/amend.tti %]
[% PROCESS includes/menu_end.tti %]
