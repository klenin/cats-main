[%- js.nonce = 1; PROCESS includes/sources_styles.tti -%]
[%- PROCESS includes/header.tti -%]
[%- replace_arrow = 'â†’' -%]
</head>
<body>
<script nonce="[% nonce %]">
<!--
function show_ab(e) {
  e.preventDefault();

  var that = this;
  document.querySelectorAll('a[data-diff]').forEach(function (a) {
    a.className  = a == that ? 'inline_menu_selected' : '';
  });

  var sel_str = that.getAttribute('data-diff');
  var selectors = {};
  for (var re = /(\w+):\s*(\d+)/g, match; match = re.exec(sel_str);)
      selectors[match[1]] = 1 * match[2];

  var line_numbers = document.getElementById('line_numbers');
  var lines = document.getElementById('lines');
  if (!line_numbers || !lines) return;

  line_numbers.innerHTML = '';
  lines.innerHTML = '';

  for (var i = 0; diff_lines.length > i; ++i) {
    var cls = diff_lines[i][0];
    var display = selectors[cls];
    if (display === 0) continue;
    line_numbers.appendChild(document.createTextNode((i + 1) + '\n'));
    var span = document.createElement('span');
    span.className = cls;
    var line = display === 1 ? '' : diff_lines[i][1];
    span.appendChild(document.createTextNode(line + '\n'));
    lines.appendChild(span);
  }
}

var diff_lines = [
  [% FOREACH dl IN diff_lines -%]
  [ '[% dl.class.squote %]', '[% dl.line.squote %]' ][% ',' UNLESS loop.last %]
  [% END -%]
];

function _add_spaced(input, text) {
  input.value += (input.value === '' || input.value.endsWith(' ') ? '' : ' ') + text;
}

function add_replacement(e) {
  e.preventDefault();
  var that = this;

  var from_to = that.innerText.split('[% replace_arrow %]');
  _add_spaced(document.querySelector('input[name=replace_from]'), from_to[0]);
  _add_spaced(document.querySelector('input[name=replace_to]'), from_to[1]);
}

window.addEventListener('load', function() {
  document.querySelectorAll('a[data-diff]').forEach(function (a) {
    a.addEventListener('click', show_ab);
  });
  document.querySelectorAll('div.recommended_replacements a').forEach(function (a) {
    a.addEventListener('click', add_replacement);
  });
});
//-->
</script>
[% PROCESS includes/sources_info.tti subcaption=capt.compare_submissions %]
<div class="diff_runs_replace">
[% PROCESS includes/encoding_form.html.tti capt_enc = capt.encoding %]
<form method="POST" class="weak_border">
<input type="text" name="replace_from" value="[% replace_from | html %]" placeholder="[% capt.replace_placeholder %]" class="bordered"/>
<button name="replace" class="button" title="[% capt.replace %]">[% replace_arrow %]</button>
<input type="text" name="replace_to" value="[% replace_to | html %]" placeholder="[% capt.replace_placeholder %]" class="bordered" />
[% IF recommended_replacements.size -%]
<div class="recommended_replacements inline_menu">
[%- FOREACH rr IN recommended_replacements; href('#', rr.replace(' ', replace_arrow)); ' '; END -%]
</div>
[%- END %]
</form>
</div>
<form method="POST">
<p>[% capt.similarity %]: [% similarity.basic %] [% similarity.collapse_idents %]
[% IF similar %]
<button type="submit" name="reject_both" value="1" class="button">[% capt.reject_both %]</button>
<input type="text" name="reject_both_message" class="bordered" value="[% capt.reject_both_message %]" />
[% END %]
</p>
[% capt.show %]:
[<span class="inline_menu">
<a data-diff="diff_only_a: 2, diff_only_b: 2, diff_both: 2" href="#" class="inline_menu_selected">[% capt.both %]</a>
| <a data-diff="diff_only_a: 2, diff_only_b: 2, diff_both: 0" href="#">[% capt.diff %]</a>
| <a data-diff="diff_only_a: 2, diff_only_b: 1, diff_both: 2" href="#">[% capt.a_only %]</a>
| <a data-diff="diff_only_a: 1, diff_only_b: 2, diff_both: 2" href="#">[% capt.b_only %]</a>
</span>]
</form>
<table class="internal_borders">
<tr>
<td class="narrow num"><pre id="line_numbers"><code>[% FOREACH dl IN diff_lines; loop.count %]
[% END %]</code></pre></td>
<td style="vertical-align: top"><pre id="lines"><code>
[%- FOREACH dl IN diff_lines; span(dl.line, dl.class) %]
[% END -%]
</code></pre></td></tr>
</table>
[% PROCESS includes/timing.tti %]
</body>
</html>
