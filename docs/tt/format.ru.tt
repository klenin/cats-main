[% PROCESS header.tti title = 'Формат заданий' lang = 'ru' %]
[%- MACRO s(m1, m2) BLOCK; m1; ' '; m2; END -%]
[%- MACRO opt BLOCK %]<sup>&nbsp;<a href="#opt" title="Необязательный атрибут">o</a></sup>[% END -%]
[%- MACRO v11 BLOCK %]<sup><a href="#v11" title="С версии 1.1">1.1</a></sup>[% END -%]
[%- MACRO v12 BLOCK %]<sup><a href="#v12" title="С версии 1.2">1.2</a></sup>[% END -%]
[%- MACRO v13 BLOCK %]<sup><a href="#v13" title="С версии 1.3">1.3</a></sup>[% END -%]
[%- MACRO v14 BLOCK %]<sup><a href="#v14" title="С версии 1.4">1.4</a></sup>[% END -%]
[%- MACRO dv14 BLOCK %]<sup><a href="#dv14" title="Устарела с версии 1.4">&minus;1.4</a></sup>[% END -%]
[%- MACRO v15 BLOCK %]<sup><a href="#v15" title="С версии 1.5">1.5</a></sup>[% END -%]
[%- MACRO dv15 BLOCK %]<sup><a href="#dv15" title="Устарела с версии 1.5">&minus;1.5</a></sup>[% END -%]
[%- MACRO v16 BLOCK %]<sup><a href="#v16" title="С версии 1.6">1.6</a></sup>[% END -%]
[%- MACRO v17 BLOCK %]<sup><a href="#v17" title="С версии 1.7">1.7</a></sup>[% END -%]
[%- MACRO v18 BLOCK %]<sup><a href="#v18" title="С версии 1.8">1.8</a></sup>[% END -%]
[%- MACRO v19 BLOCK %]<sup><a href="#v19" title="С версии 1.9">1.9</a></sup>[% END -%]
[%- MACRO v110 BLOCK %]<sup><a href="#v110" title="С версии 1.10">1.10</a></sup>[% END -%]
[%- MACRO v111 BLOCK %]<sup><a href="#v111" title="С версии 1.11">1.11</a></sup>[% END -%]
[%- MACRO tag_in(t1, t2, m1, m2) BLOCK
%]<code>&lt;<a name="[% t1 %]">[% t1 %]</a>&gt;[% IF t2 != '';
  IF m1 != '' %]</code>[% m1 %]<br/><code>[% ELSE %]<br/>[% END
%]&lt;<a href="#[% t2 %]">[% t2 %]</a>&gt;[% END %]</code>[% m2;
END -%]
[%- MACRO tag_ref(t) BLOCK %]<code>&lt;<a href="#[% t %]">[% t %]</a>&gt;</code>[% END -%]
[%- MACRO mem_units BLOCK %](в <a href="#memoryUnits">мегабайтах или других единицах</a>)[% END -%]
[%- MACRO stml BLOCK %]<a href="#STML">STML</a>[% END -%]
<h2>Версия 1.11</h2>

<p><a href="sample.zip">скачать пример пакета с заданием</a></p>
<p>Для хранения задачи используется ZIP-файл, в корне которого обязательно
должен быть ровно один XML-файл с описанием условия задачи и
некоторый набор дополнительных файлов с тестами, программами проверки и т.д.
</p>

<h2>Структура XML-файла с задачей</h2>

<table class="ft">
<col width="1%"/><col width="40%"><col width="*"/>
<tr>
  <th>Название тега<br/>Тег верхнего уровня</th> <th>Атрибуты</th> <th>Комментарии</th>
</tr>
<tr>
  <td>[% tag_in('CATS') %]</td>
  <td><ul><li>version[% opt %] — номер версии (по умолчанию "1.4").</li></ul></td>
  <td>Обязательный внешний тег.</td>
</tr>
<tr>
  <td>[% tag_in('Problem', 'CATS') %]</td>
  <td>
    <ul>
      <li>title — заголовок задачи на первом языке из списка <code>lang</code>.</li>
      <li>lang[% opt %] — список разделённых запятыми[% v110 %] (естественных) языков описания задачи.</li>
      <li>tlimit — лимит времени на прохождение одного теста (в секундах).</li>
      <li>mlimit[% v11 %] — лимит памяти на прохождение одного теста [% mem_units %].</li>
      <li>wlimit[% opt %] [% v19 %] — лимит записи на прохождение одного теста [% mem_units %], по умолчанию 30.</li>
      <li>author[% opt %] — автор.</li>
      <li>inputFile — имя входного файла или <code>*STDIN</code>[% v18 %] или <code>*NONE</code>[% v110 %].</li>
      <li>outputFile — имя выходного файла или <code>*STDOUT</code>[% v18 %] или <code>*NONE</code>[% v110 %].</li>
      <li>difficulty[% opt %] [% dv14 %] — авторская оценка сложности задачи в баллах от (1 до 100).</li>
      <li>stdChecker[% opt %] [% dv14 %] — имя стандартной программы проверки.</li>
      <li>maxPoints[% opt %] [% v13 %] — максимальный балл за задачу, имеет приоритет перед суммой баллов по тестам.</li>

      <li>saveInputPrefix[% opt %] [% v19 %] —
        сохранять для каждого сгенерированного теста начальную часть не более указанной длины [% mem_units %].</li>
      <li>saveOutputPrefix[% opt %] [% v19 %] —
        сохранять для каждой попытки на каждом тесте начальную часть вывода не более указанной длины [% mem_units %].</li>
      <li>saveAnswerPrefix[% opt %] [% v19 %] —
        сохранять для каждого теста начальную часть вывода эталонного решения не более указанной длины [% mem_units %].</li>
    </ul>
  </td>
  <td>Стандартная программа проверки служит для сравнения выходного
    файла с файлом, содержащим ответ теста. Перечень стандартных программ проверки:
    <ul>
      <li>nums — проверяет совпадение целых чисел (4 байта — long int).</li>
      <li>floats2 — проверяет совпадение вещественных чисел (10 байт — long double).</li>
      <li>strs — проверяет совпадение строк до 256 символов.</li>
      <li>longnums — проверяет совпадение длинных целых чисел (до 10000 цифр).</li>
      <li>longstrs — проверяет совпадение длинных строк (до 10000 символов).</li>
    </ul><br/>
    Начиная с версии 1.4, вместо атрибута stdChecker рекомендуется пользоваться
    тегом [% tag_ref('Import') %] с использованием следующих стандартных guid:
    <ul>
      <li>std.nums — проверяет совпадение последовательностей 32-битных целых чисел.</li>
      <li>std.longnums — проверяет совпадение последовательностей беззнаковых целых чисел произвольной длины.</li>
      <li>std.floats&lt;n&gt;, где n от 2 до 5 — проверяет совпадение вещественных чисел с точностью до n знаков.</li>
      <li>std.strs — проверяет совпадение наборов строк произвольной длины.</li>
    </ul>
  </td>
</tr>
<tr>
  <td>[% tag_in('Keyword', 'Problem') %]</td>
  <td>
      <ul><li>code — код ключевого слова.</li></ul>
  </td>
  <td>Код ключевого слова должен быть известен системе.</td>
</tr>
<tr>
  <td>[% tag_in('ProblemStatement', 'Problem') %]</td>
  <td>
    <ul>
      <li>attachment[% opt %] [% v19 %] — идентификатор объекта [% tag_ref('Attachment') %].</li>
      <li>url[% opt %] [% v19 %] — произвольный URL.</li>
    </ul>
  </td>
  <td>
    Описание условия задачи в формате [% stml %].
    Если указан атрибут attachment или url, текст задачи заменяется ссылкой.
  </td>
</tr>
<tr>
  <td>[% tag_in('ProblemConstraints', 'Problem') %]</td>
  <td>&nbsp;</td>
  <td>Описание ограничений на входные данные задачи в формате [% stml %].</td>
</tr>
<tr>
  <td>[% tag_in('InputFormat', 'Problem') %]</td>
  <td>&nbsp;</td>
  <td>Описание формата входного файла в формате [% stml %].</td>
</tr>
<tr>
  <td>[% tag_in('OutputFormat', 'Problem') %]</td>
  <td>&nbsp;</td>
  <td>Описание формата выходного файла в формате [% stml %].</td>
</tr>
<tr>
  <td>[% tag_in('JsonData', 'Problem', v17) %]</td>
  <td>&nbsp;</td>
  <td>Дополнительные данные к задаче в формате JSON.
    Рекомендуется использовать тег [% tag_ref('include') %].</td>
</tr>
<tr>
  <td>[% tag_in('Explanation', 'Problem', v15) %]</td>
  <td>
    <ul>
      <li>attachment[% opt %] [% v19 %] — идентификатор объекта [% tag_ref('Attachment') %].</li>
      <li>url[% opt %] [% v19 %] — произвольный URL.</li>
    </ul>
  </td>
  <td>
    Разбор задачи в формате [% stml %].
    Если указан атрибут attachment или url, текст разбора заменяется ссылкой.
  </td>
</tr>
<tr>
  <td>[% tag_in('Checker', 'Problem') %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Checker') %] (произвольная текстовая строка).</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>style[% opt %] [% v12 %] — формат параметров, возможные значения:
        <ul>
          <li>"legacy" — параметры <code>input answer output</code>; значение по умолчанию для совместимости
            со старыми задачами.</li>
          <li>"testlib" — параметры <code>input output answer</code>; для совместимости с библиотекой testlib.
          Рекомендуется использовать в новых задачах.</li>
          <li>"partial" — параметры аналогично testlib. Баллы за тест считываются
          со стандартного выхода checker'а.</li>
          <li>"multiple"[% v110 %] — параметры аналогично testlib. Используется для соревновательных задач.
            В выходном файле ожидается лог контроллера.
            В стандартном выходе ожидается по одной строке на агента.
        </ul>
      </li>
      <li>export[% opt %] [% v14 %] — глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] — лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] [% v17 %] — лимит памяти [% mem_units %].</li>
      <li>writeLimit[% opt %] [% v19 %] — лимит записи [% mem_units %].</li>
    </ul>
  </td>
  <td>
    Описание проверяющей программы. Данный тег игнорируется, если в описании задачи присутствует атрибут stdChecker.
    "src" — задаёт путь к файлу, относительно корня архива. Допускается использование вложенных каталогов.
    Регистр пути к файлу должен совпадать с регистром имён файлов в архиве.
    Перечень стандартных кодов сред разработки:
    <ul>
      <li>1[% v12 %] — None (h;inc)</li>
      <li>2[% v16 %] — Answers in zip (zip)</li>
      <li>101 — Cross-platform C/C++ compiler (cpp;c)</li>
      <li>102 — GNU C++ (cc;cxx)</li>
      <li>103 — MS Visual C++ (cpp;c)</li>
      <li>104 — Borland C++ 3.1 (cpp;c)</li>
      <li>105 — GNU C (c)</li>
      <li>201 — Borland Pascal 7.0 (pas)</li>
      <li>202 — Free Pascal (pp)</li>
      <li>203 — Borland Delphi (dpr)</li>
      <li>301 — Quick Basic (qb)  (поддерживается не полностью)[% v11 %]</li>
      <li>302 — Free Basic (bas) [% v14 %]</li>
      <li>401 — Java (java)[% v13 %]</li>
      <li>402 — C# (cs)[% v16 %]</li>
      <li>501 — Perl (pl)[% v14 %]</li>
      <li>502 — Python (py)[% v16 %]</li>
      <li>503 — Haskell (hs)[% v16 %]</li>
      <li>504 — Ruby (rb)[% v16 %]</li>
    </ul><br/>
    Если код среды разработки не указан, то он определяется по расширению файла,
    в порядке приоритета, заданного списком стандартных кодов сред разработки.
    <p>
      Код возврата проверяющей программы: 0 — OK, 1 — WA, 2 — PE, 3 — Internal error.
    </p>
  </td>
</tr>
<tr>
  <td>[% tag_in('Picture', 'Problem') %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Picture') %] (произвольная текстовая строка).</li>
      <li>src — путь к файлу изображения.</li>
    </ul>
  </td>
  <td>Описание картинки, встраиваемой в текст задачи.</td>
</tr>
<tr>
  <td>[% tag_in('Attachment', 'Problem', v16) %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Attachment') %] (произвольная текстовая строка).</li>
      <li>src — путь к файлу вложения.</li>
    </ul>
  </td>
  <td>Произвольный файл, доступный для скачивания из текста задачи.</td>
</tr>
<tr>
  <td>[% tag_in('Solution', 'Problem') %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Solution') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>export[% opt %] [% v14 %] — глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] — лимит времени в секундах. По умолчанию совпадает с лимитом задачи.</li>
      <li>memoryLimit[% opt %] [% v17 %] — лимит памяти [% mem_units %]. По умолчанию совпадает с лимитом задачи.</li>
      <li>writeLimit[% opt %] [% v19 %] — лимит записи [% mem_units %]. По умолчанию совпадает с лимитом задачи.</li>
    </ul>
  </td>
  <td>Описание эталонного решения.</td>
</tr>
<tr>
  <td>[% tag_in('Generator', 'Problem') %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Generator') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>outputFile[% opt %] [% v12 %] — имя выходного файла или <code>*STDOUT</code>.</li>
      <li>export[% opt %] [% v14 %] — глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] — лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] [% v17 %] — лимит памяти [% mem_units %].</li>
      <li>writeLimit[% opt %] [% v19 %] — лимит записи [% mem_units %]. По умолчанию 999.</li>
    </ul>
  </td>
  <td>Описание генератора тестов. Генератор должен создать файл,
    имя которого задано в атрибуте <code>outputFile</code>. Этот файл используется в качестве
    исходных данных в теге [% tag_ref('In') %].
    По умолчанию имя файла должно совпадать со значением атрибута <code>inputFile</code> тега [% tag_ref('Problem') %].
    Специальное значение <code>outputFile="*STDOUT"</code> означает, что генератор выдаёт тест на стандартный вывод.
    <br/>
    Для групповых генераторов атрибут outputFile может содержать
    контекстные переменные[% v15 %], обозначающие номер теста,  а также шаблоны поиска файлов [% v19 %] '?' и '*'.
    Например, для генератора, создающего файлы t01, t02, ..., t50 в подкаталогах subtask1, subtask2, ...:
    <pre>
      &lt;Generator name="gen" src="gen.pas" outputFile="subtask?/t%0n" /&gt;
      &lt;Test rank="1-50" &gt; &lt;In use="gen" genAll="1"&gt; ...</pre>
</tr>
<tr>
  <td>[% tag_in('GeneratorRange', 'Problem', v12) %]</td>
  <td>
    <ul>
      <li>from — порядковый номер первого генератора.</li>
      <li>to — порядковый номер последнего генератора.</li>
      <li>name — идентификатор объекта [% tag_ref('Generator') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>outputFile[% opt %] [% v12 %] — имя выходного файла или "*STDOUT".</li>
      <li>export[% opt %] [% v14 %] — глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] — лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] [% v17 %] — лимит памяти [% mem_units %].</li>
      <li>writeLimit[% opt %] [% v19 %] — лимит записи [% mem_units %]. По умолчанию 999.</li>
    </ul>
  </td>
  <td>В атрибутах name, src и export тега [% tag_ref('GeneratorRange') %] допускается
    использование контекстных переменных, обозначающих номер текущего генератора.
    Например:<br/>
    <code>&lt;GeneratorRange from="1" to="10" name="g%0n" src="gen%0n.pas"/&gt;</code>
  </td>
</tr>
<tr>
  <td>[% tag_in('Validator', 'Problem', v110) %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Validator') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>export[% opt %] — глобальный идентификатор.</li>
      <li>timeLimit[% opt %] — лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] — лимит памяти [% mem_units %].</li>
      <li>writeLimit[% opt %] — лимит записи [% mem_units %]. По умолчанию 999.</li>
    </ul>
  </td>
  <td>Валидатор тестовых данных. Считывает данные из стандартного входа и/или входного файла.
    Завершается с кодом 0 если файл прошёл валидацию, 1 в противном случае.
  </td>
</tr>
<tr>
  <td>[% tag_in('Visualizer', 'Problem', v19) %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Visualizer') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки, рекомендуется использовать код 1.</li>
      <li>export[% opt %] — глобальный идентификатор.</li>
    </ul>
  </td>
  <td>Визуализатор тестовых данных.</td>
</tr>
<tr>
  <td>[% tag_in('Interactor', 'Problem', v19) %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Interactor') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>export[% opt %] — глобальный идентификатор.</li>
      <li>timeLimit[% opt %] — лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] — лимит памяти [% mem_units %].</li>
      <li>writeLimit[% opt %] — лимит записи [% mem_units %].</li>
    </ul>
  </td>
  <td>Интерактор или контроллер (см. [% tag_ref('Run') %]). Допускается только один интерактор на задачу.</td>
</tr>
<tr>
  <td>[% tag_in('Linter', 'Problem', v110) %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Linter') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>stage — одно из 'before' или 'after'.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>export[% opt %] — глобальный идентификатор.</li>
      <li>timeLimit[% opt %] — лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] — лимит памяти [% mem_units %].</li>
      <li>writeLimit[% opt %] — лимит записи [% mem_units %].</li>
    </ul>
  </td>
  <td>Линтер запускается либо до, либо после компиляции в зависимости от атрибута 'stage'.
    Линтер принимает имена исходных файлов в командной строке и завершается с ненулевым кодом возврата
    если исходный код не прошёл проверку.
    Стандартный выход линтера может содержать сообщение об ошибке.
    Линтер может быть импортирован по глобальному идентификатору. См. [% tag_ref('Import') %]</td>
</tr>
<tr>
  <td>[% tag_in('Run', 'Problem', v19) %]</td>
  <td>
    <ul>
      <li>method — форма запуска решений.</li>
    </ul>
  </td>
  <td>Допустимые значения атрибута method:
    <ul>
      <li>default — запуск одиночного процесса с решением.</li>
      <li>interactive — одновременный запуск решения и интерактора (тег [% tag_ref('Interactor') %]),
        взаимодействующих через стандартные потоки ввода/вывода.</li>
      <li>competitive[% v110 %] — одновременный запуск контроллера (тег [% tag_ref('Interactor') %]) и нескольких решений (агентов),
        взаимодействующих через стандартные потоки ввода/вывода.</li>
      <li>competitive_modules[% v111 %] — одновременный запуск контроллера и нескольких решений (агентов),
        взаимодействующих через API в рамках одного процесса.</li>
      <li>none[% v111 %] — запуск не производится.</li>
    </ul>
  </td>
</tr>
<tr>
  <td>[% tag_in('Snippet', 'Problem', v111) %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Snippet') %], можно использовать <a href="#contextVars">контекстные переменные</a>.</li>
      <li>rank[% opt %] [% v111 %] — <a href="#rankSpec">спецификация порядковых номеров</a> объектов [% tag_ref('Snippet') %].</li>
      <li>generator[% opt %] — идентификатор объекта [% tag_ref('Generator') %].</li>
    </ul>
  </td>
  <td>Фрагмент условия или теста к задаче. Может отличаться для каждого участника.
  </td>
</tr>
<tr>
  <td>[% tag_in('Test', 'Problem') %]</td>
  <td><ul>
    <li>rank — <a href="#rankSpec">спецификация порядковых номеров тестов</a>.
      Если поле rank равно "*", указанные в теге параметры принимаются в качестве значений по умолчанию
      для всех тестов. [% v16 %]</li>
    <li>points[% opt %] — количество баллов за тест.</li>
    <li>descr[% opt %] [% v110 %] — описание теста.</li>
  </ul></td>
  <td>
  В задаче должны присутствовать тесты со значениями rank от 1 до некоторого N.
  Если ни одного теста нет, то любое компилируемое решение будет принято как верное.
  Начиная с версии 1.5, в атрибутах тегов [% tag_ref('In') %] и [% tag_ref('Out') %],
  вложенных в [% tag_ref('Test') %],
  можно использовать контекстные переменные, обозначающие номер теста.
  Например:<pre>&lt;Test rank="1-10"&gt;
  &lt;In src="%0n.in"/&gt;&lt;Out use="solution"/&gt;
&lt;/Test&gt;</pre>
  Для более экономного описания можно распределять описание теста на несколько тегов, например:
  <pre>&lt;Test rank="1-5" points="1" /&gt;
&lt;Test rank="6-10" points="2" /&gt;
&lt;Test rank="1-10"&gt;&lt;Out use="sol"&gt;&lt;/Test&gt;</pre>
  При этом данные об одном тесте, указанные в различных тегах, не должны перекрываться.
</td>
</tr>
<tr>
  <td>[% tag_in('TestRange', 'Problem', s(v11, dv15)) %]</td>
  <td>
    <ul>
      <li>from — порядковый номер первого теста.</li>
      <li>to — порядковый номер последнего теста.</li>
       <li>points[% opt %] — количество баллов за каждый тест диапазона.</li>
    </ul>
  </td>
  <td>
  Начиная с версии 1.5, рекомендуется использовать тег [% tag_ref('Test') %].<br/>
  В атрибутах тегов [% tag_ref('In') %] и [% tag_ref('Out') %], вложенных в [% tag_ref('TestRange') %],
  можно использовать контекстные переменные, обозначающие номер теста.
  Например:<pre>&lt;TestRange from="1" to="10"&gt;
  &lt;In src="%0n.in"/&gt;&lt;Out use="solution"/&gt;
&lt;/TestRange&gt;</pre>
</td>
</tr>
<tr>
  <td>[% tag_in('In', 'Test') %], [% tag_ref('TestRange'); v11 %]</td>
  <td>
    <ul>
      <li>use[% opt %] — идентификатор объекта [% tag_ref('Generator') %].</li>
      <li>param[% opt %] — параметры, передаваемые генератору тестов при запуске.</li>
      <li>src[% opt %] — путь к входному файлу теста (если не указан атрибут use).</li>
      <li>genAll[% s(opt, v15) %] — использовать групповую генерацию.</li>
      <li>validate[% s(opt, v110) %] — идентификатор объекта [% tag_ref('Validator') %].</li>
      <li>validateParam[% s(opt, v110) %] — аргумент командной строки для передачи в [% tag_ref('Validator') %].</li>
      <li>hash[% s(opt, v110) %] — хеш входного файла в формате <code>$alg$hex</code>,
        где 'alg' это одно из значений 'sha' либо 'md5',
        и 'hex' это последовательность шестнадцатеричных цифр в нижнем регистре, представляющих значение хеша.</li>
      <li>snippet[% s(opt, v111) %] — идентификатор объекта [% tag_ref('Snippet') %].</li>
    </ul>
  </td>
  <td>Описание входного файла теста.
    <br/>
    Если указан атрибут "use", то входной файл теста будет получен путём запуска
    генератора тестов.
    Если в атрибуте "param" содержится символ "<code>|</code>", то для генерации используется конвейер,
    нaчинающийся с генератора тестов, за которым идут модули генератора. Например:
    <pre><code>&lt;Test rank="10"&gt;&lt;In use="gen" param="100 | shuffle 19234"/&gt;&lt;/Test&gt;</code></pre>
    Если ни один из атрибутов "src" и "use" не указан, содержит текст входного файла[% v19 %].
    Пробелы и переводы строк сохраняются в точности.
  </td>
</tr>
<tr>
  <td>[% tag_in('Out', 'Test') %], [% tag_ref('TestRange'); v11 %]</td>
  <td>
    <ul>
      <li>use[% opt %] — идентификатор объекта [% tag_ref('Solution') %].</li>
      <li>src[% opt %] — путь к выходному файлу теста (если не указан атрибут use).</li>
    </ul>
  </td>
  <td>Если указан атрибут "use", то выходной файл теста будет получен путём запуска
    эталонного решения.
    Если ни один из атрибутов "src" и "use" не указан, содержит текст выходного файла[% v19 %].
    Пробелы и переводы строк сохраняются в точности.
  </td>
</tr>
<tr>
  <td>[% tag_in('Testset', 'Problem', v15) %]</td>
  <td><ul>
    <li>name — имя тестового набора.</li>
    <li>tests — <a href="#rankSpec">спецификация порядковых номеров тестов</a>.</li>
    <li>points[% s(opt, v18) %] — количество баллов за набор тестов.</li>
    <li>hideDetails[% s(opt, v18) %] — скрывать результаты индивидуальных тестов.</li>
    <li>comment[% s(opt, v18) %] — примечание.</li>
    <li>depends_on[% s(opt, v19) %] —
      <a href="#rankSpec">спецификация порядковых номеров тестов</a>, от которых зависит данный набор.</li>
  </ul></td>
  <td>Содержит описание тестового набора. При подключении задачи к турниру можно
    указать тестовые наборы, которые будут использоваться для проверки.
    По умолчанию используются все имеющиеся в пакете тесты.
    Если указано количество баллов за набор тестов, то баллы начисляются
    только в случае, когда все тесты из набора пройдены.
    Допустимо смешивать наборы и независимые тесты,
    а также указывать в пакете перекрывающиеся наборы.
    Тест не должен принадлежать нескольким оценённым, зависимым и/или скрытым наборам,
    использующимся одновременно.
  </td>
</tr>
<tr>
  <td>[% tag_in('Module', 'Problem', v12) %]</td>
  <td>
    <ul>
      <li>name — идентификатор объекта [% tag_ref('Module') %].</li>
      <li>src — путь к файлу с исходным кодом.</li>
      <li>fileName[% opt %] [% v111 %] — имя создаваемого файла с исходным кодом.</li>
      <li>de_code[% opt %] — код среды разработки.</li>
      <li>type — вид модуля (generator, checker, solution, linter).</li>
      <li>export[% opt %] [% v14 %] — глобальный идентификатор.</li>
      <li>main[% opt %] [% v110 %] — использовать этот модуль как главный файл, а отправленный код как модуль с указанным именем.
        Только для модулей типа 'solution'.</li>
    </ul>
  </td>
  <td>Описание модуля. Файлы модулей распаковываются и компилируются вместе с каждым объектом
    соответствующего вида. Для модулей, отдельная компиляция которых не требуется, следует указывать
    среду разработки "None" (de_code="1").
    Порядок компиляции модулей совпадает с порядком перечисления в файле описания задачи.
    Если вместо атрибута src указан атрибут fileName, содержимое тега сохраняется в модуль с именем fileName.
  </td>
</tr>
<tr>
  <td>[% tag_in('Import', 'Problem', v14) %]</td>
  <td>
    <ul>
      <li>guid — глобальный идентификатор импортируемого объекта.
        Может содержать символ <code>*</code>, обозначающий произвольную подстроку.[% v15 %]</li>
      <li>type[% opt %] — тип импортируемого объекта модуля (generator, checker, solution).</li>
      <li>name[% opt %] [% v15 %] — идентификатор объекта для ссылок в текущей задаче.</li>
    </ul>
  </td>
  <td>Импорт объекта из существующей задачи. Поиск объекта осуществляется по guid.
    Если указан атрибут type, проверяется соответствие типа объекта.
    Эффект от импорта объекта эквивалентен добавлению его копии в пакет с задачей.
  </td>
</tr>
<tr>
  <td>[% tag_in('Sample', 'Problem') %]</td>
  <td>
    <ul>
      <li>rank — спецификация порядковых номеров примеров (не пересекается с аналогичным атрибутом тега [% tag_ref('Test') %]).</li>
    </ul>
  </td>
  <td>Описание демонстрационного теста.
  В атрибутах тегов [% tag_ref('SampleIn') %] и [% tag_ref('SampleOut') %], вложенных в [% tag_ref('Sample') %],
  можно использовать контекстные переменные, обозначающие номер примера[% v19 %].
  Например:
  <pre>&lt;Sample rank="1-3"&gt;
  &lt;SampleIn src="%0n.in"/&gt;
  &lt;SampleOut src="%0n.out"/&gt;
&lt;/Sample&gt;</pre>
  </td>
</tr>
<tr>
  <td>[% tag_in('SampleIn', 'Sample') %]</td>
  <td>
    <ul>
      <li>src[% opt %] [% v16 %] — путь ко входному файлу примера.</li>
      <li>html[% opt %] [% v111 %] — признак применимости форматирования внутри текста примера. Если не установлен, специальные символы в тексте воспроизводятся буквально.</li>
    </ul>
  </td>
  <td>
    Содержит текст с примером входного файла в случае, если не указан атрибут src.
    Пробелы и переводы строк сохраняются в точности.
  </td>
</tr>
<tr>
  <td>[% tag_in('SampleOut', 'Sample') %]</td>
  <td>
    <ul>
      <li>src[% opt %] [% v16 %] — путь к выходному файлу примера.</li>
      <li>html[% opt %] [% v111 %] — признак применимости форматирования внутри текста примера. Если не установлен, специальные символы в тексте воспроизводятся буквально.</li>
    </ul>
  </td>
  <td>
    Содержит текст с примером выходного файла в случае, если не указан атрибут src.
    Пробелы и переводы строк сохраняются в точности.
  </td>
</tr>
<tr>
  <td>[% tag_in('Quiz', 'ProblemStatement', v111) %]</td>
  <td>
    <ul>
      <li>type — тип вопроса, возможные типы: <code>text</code>, <code>radiogroup</code>, <code>checkbox</code>.</li>
      <li>rank[% opt %] — номер теста (см. [% tag_ref('Test') %]), по умолчанию берётся порядковый номер тега.</li>
      <li>points[% opt %] — количество баллов за тест.</li>
      <li>descr[% opt %] — описание теста.</li>
    </ul>
  </td>
  <td>Вопрос из опроса. Если указан хотя бы один из атрибутов <code>rank</code>, <code>points</code>, <code>descr</code>,
    либо использован тег [% tag_ref('Answer') %] или тег [% tag_ref('Choice') %]
    с атрибутом <code>correct</code>, автоматически создаётся тест.
  </td>
</tr>
<tr>
  <td>[% tag_in('Text', 'Quiz', v111) %]</td>
  <td></td>
  <td>Текст вопроса.</td>
</tr>
<tr>
  <td>[% tag_in('Answer', 'Quiz', v111) %]</td>
  <td></td>
  <td>Правильный ответ на вопрос типа <code>text</code>.
  </td>
</tr>
<tr>
  <td>[% tag_in('Choice', 'Quiz', v111) %]</td>
  <td>
    <ul>
      <li>correct[% opt %] — если атрибут равен 1, вариант ответа считается правильным.</li>
    </ul>
  </td>
  <td>Вариант ответа на вопрос типа <code>radiogroup</code> или <code>checkbox</code>.
  </td>
</tr>
</table>

<a name="rankSpec"></a>
<h2>Cпецификация порядковых номеров</h2>
<p>
  Спецификация представляет собой список элементов, разделённых запятыми.
  Каждый элемент может быть:
</p>
<ul>
  <li>Номером,</li>
  <li>Диапазоном номеров, разделёнными символом "<code>-</code>" [% v15 %],</li>
  <li>Диапазоном номеров и шагом, разделёнными символом "<code>-</code>" [% v110 %],</li>
  <li>Для спецификаций номеров тестов — именем набора тестов ([% tag_ref('Testset') %])[% v18 %].</li>
</ul>

<a name="contextVars"></a>
<h2>Контекстные переменные</h2>

<p>Имеют вид <code>%n</code>, <code>%0n</code>, что обозначает соответственно подстановку номера и номера с лидирующим нулём.</p>

<a name="STML"></a>
<h2>Описание формата STML (Simple Text Markup Language)</h2>

<p>Формат STML — упрощённое подмножество HTML. В STML определены следующие теги:</p>

<table class="ft">
<tr><th>Название тега<br/>Тег верхнего уровня</th><th>Атрибуты</th><th>Комментарии</th></tr>
<tr><td>[% tag_in('img') %]</td>
  <td>
    <ul>
      <li>picture — идентификатор объекта [% tag_ref('Picture') %].</li>
      <li>width[% opt %] — ширина изображения (в пикселях).</li>
      <li>height[% opt %] — высота изображения (в пикселях).</li>
      <li>align[% opt %] — метод выравнивания изображения<br/>
        (возможные значения: left — выравнивание по левому краю, right — по правому краю).</li>
    </ul>
  </td>
  <td>Вставка картинки.</td>
</tr>
<tr><td>[% tag_in('a'); v16 %]</td>
  <td>
    <ul>
      <li>attachment — идентификатор объекта [% tag_ref('Attachment') %].</li>
    </ul>
  </td>
  <td>Вставка ссылки на вложенный файл.</td>
</tr>
<tr><td>[% tag_in('object'); v16 %]</td>
  <td>
    <ul>
      <li>attachment — идентификатор объекта [% tag_ref('Attachment') %].</li>
    </ul>
  </td>
  <td>Вставка ссылки на вложенный файл.</td>
</tr>
<tr><td>[% tag_in('include'); v17 %]</td>
  <td>
    <ul>
      <li>src — имя включаемого файла; файл должен иметь ту же кодировку, что и XML.</li>
    </ul>
  </td>
  <td>Вставка текста из файла.</td>
</tr>
<tr><td>[% tag_in('code') %]</td>
  <td>
    <ul>
      <li>language[% v110 %] — название языка программирования для подсветки синтаксиса.</li>
    </ul>
  </td>
  <td>Оформление текста как кода.</td>
</tr>
<tr><td>[% tag_in('i') %], [% tag_in('em') %]</td>
  <td>&nbsp;</td>
  <td>Выделение курсивом.</td>
</tr>
<tr><td>[% tag_in('b') %]</td>
  <td>&nbsp;</td>
  <td>Выделение жирным шрифтом.</td>
</tr>
<tr><td>[% tag_in('p') %]</td>
  <td>&nbsp;</td>
  <td>Параграф.</td>
</tr>
<tr><td>[% tag_in('table') %]</td>
  <td>
    <ul>
      <li>border[% opt %] — 1 — граница присутствует,<br/>
        0 — в противном случае (по умолчанию граница отсутствует).</li>
      <li>width[% opt %] — ширина таблицы.</li>
    </ul>
  </td>
  <td>Таблица.</td>
</tr>
<tr><td>[% tag_in('tr', 'table') %]</td>
  <td>&nbsp;</td>
  <td>Ряд таблицы.</td>
</tr>
<tr><td>[% tag_in('td', 'tr') %]</td>
  <td>&nbsp;</td>
  <td>Ячейка таблицы.</td>
</tr>
<tr><td>[% tag_in('th', 'tr') %]</td>
  <td>&nbsp;</td>
  <td>Заголовок таблицы.</td>
</tr>
</table>

<a name="cats-if"></a>
<h2>Условия в STML</h2>
<p>Для любого тега внутри [% stml %] имеется возможность использовать атрибут <code>cats-if</code>,
значением которого является условие относительно тегов задачи.
</p>
<p>Условие состоит из набора выражений, разделённых запятой.
Каждое выражение имеет вид
<code>name</code>,
<code>!name</code>,
<code>name=value</code> или
<code>!name=value</code>, где знак <code>!</code> обозначает
отрицание, name — имя тега, value — значение тега.
</p>

<a name="attr-lang"></a>
<h2>Атрибут <code>lang</code> [% v110 %]</h2>
<p>По умолчанию текст задачи заключается в тег <code>div</code> с атрибутом <code>lang</code>,
соответствующим выбранному тегу языка. Однако если текст использует несколько языков
одновременно (например английские термины в русском тексте), участки на языке, отличном от языка по умолчанию,
должны иметь явно указанный атрибут <code>lang</code>.
</p>

<a name="cats-dict"></a>
<h2>Атрибут <code>cats-dict</code> [% v110 %]</h2>
<p>Слова, находящиеся внутри тега с атрибутом <code>cats-dict="1"</code>, добавляются к словарю текущего языка.</p>

<a name="cats-snippet"></a>
<h2>Атрибут <code>cats-snippet</code> [% v111 %]</h2>
<p>Содержимое тега с атрибутом <code>cats-snippet="<i>snippet_name</i>"</code> заменяется фрагментом <i>snippet_name</i>.</p>

<a name="memoryUnits"></a>
<h2>Единицы измерения памяти [% v19 %]</h2>
<p>
  Размер памяти в значении атрибута mlimit, memoryLimit, wlimit или writeLimit
  должен быть целым числом, за которым может следовать
  суффикс 'B' для байтов, 'K' для килобайтов, 'M' для мегабайтов, 'G' для гигабайтов.
  Если суффикс не указан, предполагаются мегабайты.
</p>

<a name="opt"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>o</sup></a>
  Атрибуты, помеченные этим знаком, являются необязательными.</p>
[%- MACRO since(n, v) BLOCK -%]
<a name="[% n %]"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>[% v %]</sup></a>
  Данная возможность присутствует начиная с версии [% v %].</p>
[%- END -%]
[%
  since('v11', '1.1'); since('v12', '1.2');
  since('v13', '1.3'); since('v14', '1.4');
  since('v15', '1.5'); since('v16', '1.6');
  since('v17', '1.7'); since('v18', '1.8');
  since('v19', '1.9'); since('v110', '1.10');
  since('v111', '1.11');
%]
<a name="dv14"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>&minus;1.4</sup></a>
  Данная возможность считается устаревшей начиная с версии 1.4.</p>
<a name="dv15"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>&minus;1.5</sup></a>
  Данная возможность считается устаревшей начиная с версии 1.5.</p>

[% PROCESS footer.tti %]
